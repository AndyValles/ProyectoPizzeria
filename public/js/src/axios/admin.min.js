import { query, queryAll, load_on, get, cargar_modal, close_modal } from "../../load.min.js";
import { base_url, base_root, close_window } from "../../load.min.js";
import { tabCargar, value_lista, getData } from "../manipulador.min.js";

var a = false;
var click = true;

document.addEventListener("click", e => {
    queryAll(".ctn-drop").forEach(e => {
        e.classList.remove("dp-block");
    });

});

load_on(document, 'click', '.btn-crud-tabs', function(e) {
    var el = e.target.innerHTML;
    tabCargar(base_url + "/Agregar", el);
});

load_on(document, 'click', '.btn-search-menu', function(e) {
    get(base_root + "/buscarMenu", ".modal");
    query(".modal").classList.add("dp-flex");
});

load_on(document, 'click', '.btn-cerrar-bus', function(e) {
    close_modal();
});

load_on(document, 'click', '.btn-cerrar', function(e) {
    close_modal();
});

load_on(document, 'click', '.btn-editar-modal', function(e) {
    let id = this.getAttribute("data-id");
    tabCargar(base_url + "/Editar/" + id, "Agregar");
    query(".btn-select-tabs").innerHTML = "Editar";
});

load_on(document, 'click', '.btn-crud-cancelar', function(e) {
    close_window();
});

load_on(document, 'click', '.btn-close-modal', function(e) {
    let id = this.getAttribute("data-id")
    cargar_modal("modal_delete/" + id);
});

load_on(document, 'click', '.input-custom', function(e) {
    var id = e.target.getAttribute("data-name");
    queryAll(".input-custom").forEach(event => {
        if (event.target.getAttribute("data-name") == id) {
            if (event.classList.contains("icon-checkbox-checked")) {
                event.classList.replace("icon-checkbox-checked", "icon-checkbox-unchecked");
            } else {
                classResplace("#input-custom", "icon-checkbox-unchecked", "icon-checkbox-checked")
            }
        }
    });
    queryAll(".tb_" + id).forEach(key => { key.classList.toggle("dp-none") });
});

load_on(document, 'click', '.btn-crud-filter', function(e) {
    query("#content-Filtro").classList.toggle("dp-flex");
});

load_on(document, 'click', '.adminmenu-btn', function(e) {
    var el = e.target.getAttribute("data-value");
    a = e.target.classList.contains("btn-adminselect");


    queryAll(".adminmenu-btn").forEach(event => {
        if (event.id == "btn-" + el && !a) {
            event.classList.add("btn-adminselect");
        } else {
            event.classList.remove("btn-adminselect");
        }
    });

    queryAll(".adminmenu-hr-btn").forEach(event => {
        if (event.id == "ctn-" + el && !a) {
            event.classList.add("h-100");
        } else {
            event.classList.remove("h-100");
        }
    });
});

load_on(document, 'keyup', '.input-search-menu', function(e) {
    let name = query(".input-search-menu").value;
    let classname = ".ctn-buscar-menu";
    if (name == "") { classname = ".modal" }
    console.log(classname);
    get(base_root + "/buscarMenu/" + name, classname);
});

load_on(document, 'click', '.btn-paginate', function(e) {
    var id = this.getAttribute("data-id");
    getData(id);
});

load_on(document, 'click', '.input-paginate', function(e) {
    var id = this.getAttribute("data-id");
    getData(id);
});

load_on(document, 'click', '.btn-hamburger-menu', function(e) {
    query(".ctn-adminmenu").classList.add("left-0");
});

load_on(document, 'click', '.btn-close-menu', function(e) {
    query(".ctn-adminmenu").classList.remove("left-0");
});

load_on(document, 'click', '.btn-input-select', function(e) {
    var data = this.id;
    var content = query(".box-" + data).classList;
    var icon = query(".icon-" + data).classList;
    if (click) {
        content.add("dp-block");
        icon.replace("icon-bottom", "icon-command");
        click = false;
    } else {
        content.remove("dp-block");
        icon.replace("icon-command", "icon-bottom");
        click = true;
    }

});

load_on(document, 'click', '.btn-select', function(e) {
    var data = this.getAttribute("data-id");
    var id = this.getAttribute("data-value");
    query(".box-" + id).classList.remove("dp-block");
    query(".icon-" + id).classList.replace("icon-command", "icon-bottom");
    query(".info-input-" + id).innerHTML = this.innerHTML;
    query("#" + id).setAttribute("data-id", data);
    click = true;
});


load_on(document, 'keyup', '.lista', function(e) {
    value_lista(this);
    let data = this.getAttribute("data-value");
    let val = this.value.toLowerCase();

    queryAll(".listar-" + data + " .item-list").forEach(elem => {
        let actual = elem.firstChild.innerHTML.toLowerCase().indexOf(val);
        if (actual > -1) {
            elem.style.display = "";
        } else {
            elem.style.display = "none";
        }
    });
});

load_on(document, 'click', '.lista', function(e) {
    value_lista(this);
});

load_on(document, 'click', '.btn-pedido-vermas', function(e) {
    axios.get(base_root + "/modal_detalles").
    then(res => {
        query(".modal-pedido").innerHTML = res.data;
    }).catch(err => {
        console.error(err);
    });
});

load_on(document, 'click', '.btn-close-pedido', function(e) {
    query(".modal-pedido").innerHTML = "";
});




load_on(document, 'click', '.ctn-btn-list', function(e) {
    var name = this.getAttribute("data-value");
    query(".listar-" + name).classList.remove("dp-block");
    query(".Codigo-" + name).value = this.getAttribute("data-id");
    query("#lista-" + name).value = this.innerHTML;
});

load_on(document, 'click', '.btn-tab-item', function(e) {
    var id = this.id;
    queryAll(".btn-tab-item").forEach(elem => { elem.classList.remove("btn-selected-item"); });
    query("#" + id).classList.add("btn-selected-item");
    get(base_root + "/ObtenerItem/" + id + "/", "#ctn-item");
});

load_on(document, 'keyup', '.input-time', function(e) {
    var value = this.value;
    var data = this.getAttribute("data-value");
    var id = this.id;
    if (!isNaN(value)) {
        if (value.length >= 2) {
            value = value.substring(0, 2);
            this.value = value;
            if (data == "hour" && value > 12) { this.value = 12; }
            if (data == "min" && value > 59) { this.value = 59; }
        }

    } else {
        value = value.substring(0, 0);
        this.value = value;
    }

});